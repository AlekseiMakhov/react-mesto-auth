{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","contexts/LoadingState.js","contexts/ValidationContext.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/ConfirmationPopup.js","utils/api.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","components/InfoTooltip.js","components/ImagePopup.js","components/App.js","index.js"],"names":["Header","isMobile","email","loggedIn","isSignInLocation","setSignInScreen","resetSignInScreen","handleSignOut","isExpanded","expand","className","cn","src","logo","alt","onClick","to","CurrentUserContext","createContext","Card","card","onCardClick","onLikeButtonClick","onCardDeleteClick","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","id","link","name","type","length","Main","onEditProfile","onEditAvatar","onAddPlace","onCardLike","onDeleteCard","cards","avatar","about","map","Footer","LoadingState","ValidationContext","PopupWithForm","title","children","isOpen","onClose","onSubmit","noClose","validationContext","loadingText","popup_opened","isValid","AddPlacePopup","onInput","useState","setLink","setName","value","onChange","e","target","minLength","maxLength","validation","placeholder","required","validationText","preventDefault","EditAvatarPopup","onUpdateAvatar","setAvatar","EditProfilePopup","onUpdateUser","setAbout","useEffect","_","ConfirmationPopup","api","options","this","_headers","headers","_baseUrl","baseUrl","params","fetch","then","res","ok","json","Promise","reject","status","statusText","data","_sendRequest","method","body","JSON","stringify","srcLink","cardInfo","cardId","authorization","Login","onLogin","setEmail","password","setPassword","Register","onRegister","history","useHistory","push","ProtectedRoute","Component","component","props","InfoTooltip","success","ImagePopup","Фото","App","BASE_URL","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isPopupWithSubmitOpen","setIsPopupWithSubmitOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","setLoggedIn","selectedCard","setSelectedCard","setLoadingText","setCard","setCards","setCurrentUser","setIsSignInLocation","setvalidationContext","setSuccess","useMediaQuery","query","setIsExpanded","handleInput","validArr","textArr","index","Number","resValid","validity","valid","validationMessage","handleEscButton","key","closeAllPopups","stopPropagation","document","removeEventListener","all","getProfileInfo","getInitialCards","profileInfo","cardList","catch","err","console","log","handleLogin","checkToken","infoToolTipOpen","localStorage","getItem","token","response","Error","Provider","removeItem","resetEmail","path","addEventListener","changeLikeStatus","newCard","newCards","c","setItem","userInfo","editProfileInfo","user","editAvatar","createNewCard","deleteCard","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d135400d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c2821b38.svg\";","import { Link } from 'react-router-dom';\r\nimport cn from 'classnames';\r\nimport logo from '../images/logo.svg';\r\n\r\nconst Header = ({ \r\n    isMobile, \r\n    email, \r\n    loggedIn, \r\n    isSignInLocation, \r\n    setSignInScreen, \r\n    resetSignInScreen, \r\n    handleSignOut, \r\n    isExpanded, \r\n    expand \r\n}) => {\r\n\r\n    return (\r\n        !isMobile \r\n        ?   <header className=\"header\">\r\n                <img className=\"header__logo\" src={logo} alt=\"Лого\" />\r\n                <p className=\"header__text\">{email}</p>\r\n                {loggedIn && <Link className=\"header__text\" onClick={handleSignOut} to='/signin'>Выйти</Link>}\r\n                {!loggedIn && isSignInLocation && <Link className=\"header__text\" onClick={resetSignInScreen} to='/signup'>Регистрация</Link>}\r\n                {!loggedIn && !isSignInLocation && <Link className=\"header__text\" onClick={setSignInScreen} to='/signin'>Войти</Link>}\r\n            </header>\r\n        \r\n        :   <header className={cn('header-mobile', { 'header-mobile__expanded': isExpanded })}>\r\n                <img className=\"header-mobile__logo\" src={logo} alt=\"Лого\" />\r\n                {isExpanded && <p className=\"header-mobile__text header-mobile__text_type_email\">{email}</p>}\r\n                {loggedIn && isExpanded && <Link className={cn('header-mobile__text', { 'header-mobile__text_type_signout': isExpanded })} onClick={handleSignOut} to='/signin'>Выйти</Link>}\r\n                {!loggedIn && isSignInLocation && <Link className=\"header-mobile__text\" onClick={resetSignInScreen} to='/signup'>Регистрация</Link>}\r\n                {!loggedIn && !isSignInLocation && <Link className=\"header-mobile__text\" onClick={setSignInScreen} to='/signin'>Войти</Link>}\r\n                {isExpanded && <div className='header-mobile__line'></div>}\r\n                {loggedIn && <button className={cn('header-mobile__menu-button', { 'header-mobile__menu-button_type_close': isExpanded })} onClick={expand}></button>}\r\n            </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { createContext } from 'react';\n\nconst CurrentUserContext = createContext();\nexport default CurrentUserContext;\n","import { useContext } from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nconst Card = ({\r\n    card,\r\n    onCardClick,\r\n    onLikeButtonClick,\r\n    onCardDeleteClick\r\n}) => {\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const isOwn = card.owner._id === currentUser._id;\r\n\r\n    function handleCardClick() {\r\n      onCardClick(card);\r\n    }\r\n\r\n    const cardDeleteButtonClassName = `element__trash-button ${isOwn ? 'element__trash-button_visible' : ''}`;\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n    const cardLikeButtonClassName = `like__button ${isLiked ? 'like__button_pressed' : ''}`;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"element\" id={card.id}>\r\n                <img className=\"element__image\" src={card.link} alt={`${card.name}.Фото`} onClick={handleCardClick} />\r\n                <button type=\"button\" className={cardDeleteButtonClassName} onClick={() => onCardDeleteClick(card)}></button>\r\n                <h3 className=\"element__text\">{card.name}</h3>\r\n                <div className=\"like\">\r\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={() => onLikeButtonClick(card)}></button>\r\n                    <p className=\"like__count\">{card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import { useContext } from 'react';\r\nimport Card from './Card';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nconst Main = ({\r\n    onEditProfile,\r\n    onEditAvatar,\r\n    onAddPlace,\r\n    onCardClick,\r\n    onCardLike,\r\n    onDeleteCard,\r\n    cards\r\n}) => {\r\n    const currentUser = useContext(CurrentUserContext);\r\n    \r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"avatar\" onClick={onEditAvatar}>\r\n                    <img className=\"avatar__img\" src={currentUser.avatar} alt=\"Аватар\" />\r\n                    <div className=\"avatar__edit-icon\"></div>\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <div>\r\n                        <h1 className=\"profile-info__name\">{currentUser.name}</h1>\r\n                        <p className=\"profile-info__description\">{currentUser.about}</p>\r\n                    </div>\r\n                    <button type=\"button\" className=\"profile-info__edit-button\" onClick={onEditProfile}></button>\r\n                </div>\r\n                <button type=\"button\" className=\"add-image-button\" onClick={onAddPlace}></button>\r\n            </section>\r\n\r\n            <section className=\"elements\">\r\n\r\n                {cards.map((card) => (\r\n                        <Card\r\n                            key={card._id}\r\n                            card={card}\r\n                            onCardClick={onCardClick}\r\n                            onLikeButtonClick={onCardLike}\r\n                            onCardDeleteClick={onDeleteCard}\r\n                        />\r\n                ))}\r\n\r\n            </section>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__logo\">© 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import { createContext } from 'react';\n\nconst LoadingState = createContext();\nexport default LoadingState;\n","import { createContext } from 'react';\n\nconst ValidationContext = createContext();\nexport default ValidationContext;\n","import cn from 'classnames';\r\nimport { useContext } from 'react';\r\nimport LoadingState from '../contexts/LoadingState';\r\nimport ValidationContext from '../contexts/ValidationContext';\r\n\r\nconst PopupWithForm = ({\r\n    name,\r\n    title,\r\n    children,\r\n    isOpen,\r\n    onClose,\r\n    onSubmit,\r\n    noClose\r\n}) => {\r\n    const validationContext = useContext(ValidationContext);\r\n    const loadingText = useContext(LoadingState);\r\n\r\n    return (\r\n        <>\r\n            <section className={cn(`popup popup_type_${name}`, { popup_opened: isOpen })} onClick={onClose}>\r\n                <form className=\"popup-form\" name={name} onSubmit={onSubmit} onClick={noClose}>\r\n                    <button type=\"button\" name=\"Закрыть\" className=\"popup-form__close-button\" onClick={onClose}></button>\r\n                    <h3 className=\"popup-form__title\">{title}</h3>\r\n                    {children}\r\n                    <button className={cn('popup-form__submit-button', { 'popup-form__submit-button_disabled': !validationContext.isValid })} >{loadingText}</button>\r\n                </form>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import { useContext, useState } from 'react';\r\nimport cn from 'classnames';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ValidationContext from '../contexts/ValidationContext';\r\n\r\nconst AddPlacePopup = ({\r\n      isOpen,\r\n      onClose,\r\n      onAddPlace,\r\n      noClose,\r\n      onInput\r\n}) => {\r\n\r\n    const validationContext = useContext(ValidationContext);\r\n\r\n    const [link, setLink] = useState('');\r\n    const [name, setName] = useState('');\r\n\r\n    const handleNameChange = e => setName(e.target.value);\r\n    const handleLinkChange = e => setLink(e.target.value);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n          if (validationContext.isValid) {\r\n            onAddPlace({\r\n                link,\r\n                name\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name='place'\r\n            title='Новое место'\r\n            children={\r\n                <>\r\n                    <input onInput={onInput} value={name??''} onChange={handleNameChange} name=\"name\" id=\"0\" type=\"text\" minLength=\"1\" maxLength=\"40\" className={cn('popup-form__text-input', { 'popup-form__text-input_type_error': !validationContext.validation[0] })} placeholder=\"Название\" required />\r\n                    <span id=\"image-input-error\" className={cn('popup-form__error-text', { 'popup-form__error-text_show': !validationContext.validation[0] })}>{validationContext.validationText[0]}</span>\r\n                    <input onInput={onInput} value={link??''} onChange={handleLinkChange} name=\"link\" id=\"1\" type=\"url\" className={cn('popup-form__text-input', { 'popup-form__text-input_type_error': !validationContext.validation[1] })} placeholder=\"Ссылка на картинку\" required />\r\n                    <span id=\"link-input-error\" className={cn('popup-form__error-text', { 'popup-form__error-text_show': !validationContext.validation[1] })}>{validationContext.validationText[1]}</span>\r\n                </>\r\n            }\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            noClose={noClose}\r\n        />\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import cn from 'classnames';\r\nimport { \r\n    useContext, \r\n    useState \r\n} from 'react';\r\nimport ValidationContext from '../contexts/ValidationContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nconst EditAvatarPopup = ({\r\n    isOpen,\r\n    onClose,\r\n    onUpdateAvatar,\r\n    noClose,\r\n    onInput\r\n}) => {\r\n    const validationContext = useContext(ValidationContext);\r\n\r\n    const [avatar, setAvatar] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (validationContext.isValid) {\r\n            onUpdateAvatar({ avatar });\r\n            setAvatar('');\r\n        }\r\n    }\r\n\r\n    const handleAvatarChange = e => setAvatar(e.target.value);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name='avatar'\r\n            title='Обновить аватар'\r\n            children={\r\n                <>\r\n                    <input onInput={onInput} name=\"avatar\" value={avatar??''} onChange={handleAvatarChange} id=\"avatar0\" type=\"url\" className={cn('popup-form__text-input', { 'popup-form__text-input_type_error': !validationContext.validation[0] })} placeholder=\"Ссылка на картинку\" required />\r\n                    <span id=\"avatar-error\" className={cn('popup-form__error-text', { 'popup-form__error-text_show': !validationContext.validation[0] })}>{validationContext.validationText[0]}</span>\r\n                </>\r\n            }\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            noClose={noClose}\r\n        />\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import { \r\n    useContext, \r\n    useEffect, \r\n    useState \r\n} from 'react';\r\nimport cn from 'classnames';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport ValidationContext from '../contexts/ValidationContext';\r\n\r\nconst EditProfilePopup = ({\r\n    isOpen,\r\n    onClose,\r\n    onUpdateUser,\r\n    noClose,\r\n    onInput\r\n}) => {\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const validationContext = useContext(ValidationContext);\r\n\r\n    const [name, setName] = useState(currentUser.name);\r\n    const [about, setAbout] = useState(currentUser.about);\r\n\r\n    useEffect((_) => {\r\n        setName(currentUser.name);\r\n        setAbout(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (validationContext.isValid) {\r\n            onUpdateUser({\r\n                name,\r\n                about\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name='profile'\r\n            title='Редактировать профиль'\r\n            children={\r\n            <>\r\n                <input onInput={onInput} name=\"name\" id=\"name0\" type=\"text\" minLength=\"2\" maxLength=\"40\" value={name??''} onChange={(e) => setName(e.target.value)} className={cn('popup-form__text-input', { 'popup-form__text-input_type_error': !validationContext.validation[0] })} placeholder=\"Имя\" required />\r\n                <span id=\"name-input-error\" className={cn('popup-form__error-text', { 'popup-form__error-text_show': !validationContext.validation[0] })}>{validationContext.validationText[0]}</span>\r\n                <input onInput={onInput} name=\"about\" id=\"about1\" type=\"text\" minLength=\"2\" maxLength=\"200\" value={about??''} onChange={(e) => setAbout(e.target.value)} className={cn('popup-form__text-input', { 'popup-form__text-input_type_error': !validationContext.validation[1] })} placeholder=\"О себе\" required />\r\n                <span id=\"about-input-error\" className={cn('popup-form__error-text', { 'popup-form__error-text_show': !validationContext.validation[1] })}>{validationContext.validationText[1]}</span>\r\n            </>\r\n            }\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            noClose={noClose}\r\n        />\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import PopupWithForm from './PopupWithForm';\r\n\r\nconst ConfirmationPopup = ({\r\n    isOpen,\r\n    onClose,\r\n    noClose,\r\n    onDeleteCard,\r\n    card\r\n}) => {\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onDeleteCard(card);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name='submit'\r\n            title='Вы уверены?'\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            noClose={noClose}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ConfirmationPopup;\r\n","class Api {\r\n    constructor(options) {\r\n        this._headers = options.headers; // Передаем заголовок\r\n        this._baseUrl = options.baseUrl; // Передаем базовый URL\r\n    }\r\n\r\n    _sendRequest(link, params) {\r\n        return fetch(link, params)\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка ${res.status} - ${res.statusText}`);\r\n          });\r\n    }\r\n\r\n    // редактирование профиля\r\n    editProfileInfo(data) {\r\n        return this._sendRequest(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about\r\n            }),\r\n        });\r\n    }\r\n\r\n    // запрос данных профиля\r\n    getProfileInfo() {\r\n        return this._sendRequest(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers\r\n        });\r\n    }\r\n\r\n    // редактирование аватара\r\n    editAvatar(srcLink) {\r\n        return this._sendRequest(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: srcLink\r\n            }),\r\n        });\r\n    }\r\n\r\n    // отправка данных о новой карточке\r\n    createNewCard(cardInfo) {\r\n        return this._sendRequest(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: cardInfo.name,\r\n                link: cardInfo.link\r\n            }),\r\n        });\r\n    }\r\n\r\n    // удаление карточки\r\n    deleteCard(cardId) {\r\n        return this._sendRequest(`${this._baseUrl}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        });\r\n    }\r\n\r\n    // ставим лайк\r\n    changeLikeStatus(cardId, isLiked) {\r\n        return this._sendRequest(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: (isLiked ? 'PUT' : 'DELETE'),\r\n            headers: this._headers\r\n        });\r\n    }\r\n\r\n    // запрос массива карточек\r\n    getInitialCards() {\r\n        return this._sendRequest(`${this._baseUrl}/cards`, {\r\n            headers: this._headers,\r\n        });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-16',\r\n    headers: {\r\n        authorization: '83172f60-a4ab-4f2a-9396-1325bbd21612',\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport default api;\r\n","import React, { useState } from 'react';\r\n\r\nconst Login = ({ onLogin }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleEmailInput = (e) => setEmail(e.target.value);\r\n    const handlePasswordInput = (e) => setPassword(e.target.value);\r\n\r\n    const handleSubmit = (e) =>  {\r\n        e.preventDefault();\r\n        if (!email || !password) {\r\n            return;\r\n        }\r\n        onLogin(email, password);\r\n    } \r\n\r\n    return (\r\n        <form name=\"login\" className=\"sign\" onSubmit={handleSubmit}>\r\n            <h2 className=\"sign__title\">Вход</h2>\r\n            <input name=\"email\" id=\"email\" type=\"email\" value={email} onChange={handleEmailInput} className='sign__input' placeholder=\"Email\" required />\r\n            <input name=\"password\" id=\"password\" type=\"password\" minLength=\"6\" value={password} onChange={handlePasswordInput} className='sign__input' placeholder=\"Пароль\" required />\r\n            <button type='submit' className='sign__button'>Войти</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Register = ({ \r\n    onRegister, \r\n    setSignInScreen \r\n}) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const handleEmailInput = (e) => setEmail(e.target.value);\r\n    const handlePasswordInput = (e) => setPassword(e.target.value);\r\n\r\n    const handleSubmit = (e) =>  {\r\n        e.preventDefault();\r\n        if (!email || !password) {\r\n            return;\r\n        }\r\n        onRegister(email, password);\r\n    }\r\n\r\n    const onSignInClick = _ => {\r\n        history.push('/signin');\r\n        setSignInScreen();\r\n    }\r\n\r\n    return (\r\n        <form name=\"login\" className=\"sign\" onSubmit={handleSubmit}>\r\n            <h2 className=\"sign__title\">Регистрация</h2>\r\n            <input name=\"email\" id=\"email\" type=\"email\" value={email} onChange={handleEmailInput} className='sign__input' placeholder=\"Email\" required />\r\n            <input name=\"password\" id=\"password\" type=\"password\" minLength=\"6\" value={password} onChange={handlePasswordInput} className='sign__input' placeholder=\"Пароль\" required />\r\n            <button type='submit' className='sign__button'>Зарегистрироваться</button>\r\n            <p className=\"sign__text\" onClick={onSignInClick}>Уже зарегистрированы? Войти</p>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { \r\n    Route, \r\n    Redirect \r\n} from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\r\n    return (\r\n        <Route>\r\n            {\r\n                () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"./signin\" />\r\n            }\r\n        </Route>\r\n)}\r\n\r\nexport default ProtectedRoute;","import cn from 'classnames';\r\n\r\nconst InfoTooltip = ({ \r\n    isOpen,\r\n    success, \r\n    noClose, \r\n    onClose \r\n}) => {\r\n    return (\r\n        <section className={cn('popup', { 'popup_opened': isOpen })} onClick={onClose}>\r\n            <div className=\"popup-info\" onClick={noClose}>\r\n                <button type=\"button\" name=\"Закрыть\" className=\"popup-info__close-button\" onClick={onClose}></button>\r\n                <div className={cn('popup-info__icon', { 'popup-info__icon_type_abort': !success })}></div>\r\n                <p className=\"popup-info__message\"> {\r\n                    success \r\n                        ? 'Вы успешно зарегистрировались!'\r\n                        : 'Что-то пошло не так! Попробуйте еще раз.'\r\n                }\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import cn from 'classnames';\r\n\r\nconst ImagePopup = ({\r\n    isOpen,\r\n    onClose,\r\n    card,\r\n    noClose\r\n}) => {\r\n    return (\r\n        <section id=\"view-image\" className={cn('popup popup_type_dark', { popup_opened: isOpen })} onClick={onClose}>\r\n            <div className=\"popup-image\" onClick={noClose}>\r\n                <button type=\"button\" name=\"Закрыть\" className=\"popup-image__close-button\" onClick={onClose}></button>\r\n                <img className=\"popup-image__image\" src={card.link} alt={`${card.name}`.Фото} />\r\n                <h3 className=\"popup-image__title\">{card.name}</h3>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import { \r\n    useState,\r\n    useEffect \r\n} from 'react';\r\nimport { \r\n    Route, \r\n    Switch, \r\n    Redirect, \r\n    useHistory \r\n} from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport ConfirmationPopup from './ConfirmationPopup';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport ValidationContext from '../contexts/ValidationContext';\r\nimport LoadingState from '../contexts/LoadingState';\r\nimport api from '../utils/api';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport ImagePopup from './ImagePopup';\r\n\r\nfunction App() {\r\n    const BASE_URL = 'https://auth.nomoreparties.co';\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n    const [isPopupWithSubmitOpen, setIsPopupWithSubmitOpen] = useState(false);\r\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [selectedCard, setSelectedCard] = useState(false);\r\n    const [loadingText, setLoadingText] = useState('');\r\n    const [card, setCard] = useState({});\r\n    const [cards, setCards] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    const [isSignInLocation, setIsSignInLocation] = useState(true);\r\n    const [email, setEmail] = useState('');\r\n    const [validationContext, setvalidationContext] = useState({ validation: [true, true], validationText: ['', ''], isValid: false });\r\n    const history = useHistory();\r\n    const [success, setSuccess] = useState(false);\r\n    const isMobile = useMediaQuery({ query: '(max-width: 620px)' });\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n    // Элементам, которые требуется валидировать, нужно выставить уникальные id, которые заканчиваются на цифру от 0 до 9\r\n    function handleInput(e) {\r\n        const validArr = validationContext.validation;\r\n        const textArr = validationContext.validationText;\r\n        const index = Number(e.target.id[e.target.id.length-1]);\r\n        let resValid = 0;\r\n\r\n        validArr[index] = e.target.validity.valid;\r\n        textArr[index] = e.target.validationMessage;\r\n\r\n        for (let i = 0; i < validArr.length; i++) {\r\n          resValid += Number(validArr[i]);\r\n        }\r\n\r\n        setvalidationContext({ \r\n            validation: validArr, \r\n            validationText: textArr, \r\n            isValid: (resValid === validArr.length) \r\n        });\r\n    }\r\n\r\n    // Закрытие модальных окон по Escape\r\n    function handleEscButton(e) {\r\n        if (e.key === 'Escape') {\r\n            closeAllPopups();\r\n        }\r\n    }\r\n\r\n    // Открытие формы редактирования аватара\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n        setLoadingText('Изменить');\r\n        // Устанавливаем параметры контекста для валидации текущей формы\r\n        // validation - массив содержит число элементов = числу валидируемых элементов формы, принимает значение validity.valid\r\n        // validationText - массив содержит число элементов = числу валидируемых элементов формы, принимает значение validationMessage\r\n        // isValid - булева величина, содержит результат валидации всех полей, true - если все поля валидны\r\n        setvalidationContext({ validation: [true], validationText: [''], isValid: false });\r\n        document.addEventListener('keydown', handleEscButton);\r\n    }\r\n\r\n    // Открытие формы редактирования профиля\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n        setLoadingText('Сохранить');\r\n        // Устанавливаем параметры контекста для валидации текущей формы\r\n        setvalidationContext({ validation: [true, true], validationText: ['', ''], isValid: true });\r\n        document.addEventListener('keydown', handleEscButton);\r\n    }\r\n\r\n    // Открытие формы добавления карточки\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n        setLoadingText('Создать');\r\n        // Устанавливаем параметры контекста для валидации текущей формы\r\n        setvalidationContext({ validation: [true, true], validationText: ['', ''], isValid: false });\r\n        document.addEventListener('keydown', handleEscButton);\r\n    }\r\n    \r\n    // Отмена всплытия для закрытия по клику по оверлею\r\n    function noClose(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    // Клик по картинке, открытие увеличенной картинки\r\n    function handleCardClick(card) {\r\n        setSelectedCard(true);\r\n        setCard(card);\r\n        document.addEventListener('keydown', handleEscButton);\r\n    }\r\n\r\n    // Нажатие на кнопку удаления, открытие окна с подтверждением\r\n    function handleDeleteCardClick(card) {\r\n        setIsPopupWithSubmitOpen(true);\r\n        setLoadingText('Да');\r\n        setvalidationContext({ validation: [], validationText: [], isValid: true });\r\n        setCard(card);\r\n        document.addEventListener('keydown', handleEscButton);\r\n    }\r\n\r\n    // Чтение с сервера инфо пользователя, данных карточки\r\n    useEffect(() => {\r\n        Promise.all([\r\n            api.getProfileInfo(),\r\n            api.getInitialCards(),\r\n        ])\r\n            .then(([profileInfo, cardList]) => {\r\n                setCurrentUser(profileInfo);\r\n                setCards(cardList);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    // Убрать/поставить лайк карточке\r\n    function handleCardLike(card) {\r\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n          api.changeLikeStatus(card._id, !isLiked)\r\n            .then((newCard) => {\r\n                const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\r\n                setCards(newCards);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    // Удаление карточки\r\n    function handleDeleteCard(card) {\r\n        setLoadingText('Удаление...');\r\n        api.deleteCard(card._id)\r\n            .then(() => {\r\n                const newCards = cards.filter((c) => c._id !== card._id);\r\n                setCards(newCards);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    // Смена инфо пользователя\r\n    function handleUpdateUser(userInfo) {\r\n        setLoadingText('Сохранение...');\r\n        api.editProfileInfo(userInfo)\r\n            .then((userInfo) => {\r\n                setCurrentUser(userInfo);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    // Смена аватара\r\n    function handleUpdateAvatar(user) {\r\n        setLoadingText('Сохранение...');\r\n        api.editAvatar(user.avatar)\r\n            .then((userInfo) => {\r\n                setCurrentUser(userInfo);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    // Добавление карточки\r\n    function handleAddPlace(newCard) {\r\n        setLoadingText('Загрузка...');\r\n        api.createNewCard(newCard)\r\n            .then((newCard) => {\r\n                setCards([newCard, ...cards]);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    // Закрытие модальных окон, снятие слушателя Escape\r\n    function closeAllPopups() {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsPopupWithSubmitOpen(false);\r\n        setSelectedCard(false);\r\n        setIsInfoTooltipOpen(false);\r\n        document.removeEventListener('keydown', handleEscButton);\r\n        setvalidationContext({ validation: [], validationText: [], isValid: false });\r\n        setCard({});\r\n    }\r\n\r\n    // Вход в систему  \r\n    const handleLogin = _ => {\r\n        setLoggedIn(true);\r\n        history.push(\"/cards\");\r\n    }\r\n\r\n    // Выход из системы  \r\n    const handleSignOut = () => {\r\n        localStorage.removeItem('token');\r\n        setEmail('');\r\n        setLoggedIn(false);\r\n        setIsExpanded(false);\r\n        setIsSignInLocation(true);\r\n    }\r\n\r\n    // Проверяем токен при загрузке страницы\r\n    useEffect(()=>{\r\n        checkToken();\r\n    },[]);\r\n\r\n    // Открываем всплывающее окошко\r\n    const infoToolTipOpen = (type) => {\r\n        setSuccess(type);\r\n        setIsInfoTooltipOpen(true);\r\n    }\r\n\r\n    // Обработка запроса авторизации\r\n    const onLogin = (email, password) => {\r\n        return fetch(`${BASE_URL}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ password, email })\r\n            })\r\n            .then(response => {\r\n                if (response.status === 400) {\r\n                  throw new Error('Не передано одно из полей')\r\n                } else if (response.status === 401) {\r\n                  throw new Error('Некорректный email или пароль')\r\n                } else\r\n                return response.json()\r\n            })   \r\n            .then((data) => {\r\n                if (data.token) {\r\n                    localStorage.setItem('token', data.token);\r\n                    handleLogin();\r\n                    setEmail(email);\r\n                }\r\n            })  \r\n            .catch(err => {\r\n                console.log(err);\r\n                infoToolTipOpen(false);\r\n            });\r\n    };\r\n\r\n    // Обработка запроса регистрации\r\n    const onRegister = (email, password) => {\r\n        return fetch(`${BASE_URL}/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ password, email })\r\n        })\r\n        .then(response => {\r\n            if (response.status === 400) throw new Error('Некорректно заполнено одно из полей') \r\n            return response.json()})\r\n        .then((res) => {\r\n            if (res.data?._id) {\r\n                infoToolTipOpen(true);\r\n                history.push('/signin');\r\n                setIsSignInLocation();\r\n            }                   \r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            infoToolTipOpen(false);\r\n        });\r\n    };\r\n\r\n    // Проверка токена  \r\n    const checkToken = () => {\r\n        if (localStorage.getItem('token')) {\r\n            const token = localStorage.getItem('token');\r\n            return fetch(`${BASE_URL}/users/me`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                }\r\n            })\r\n            .then(response => {\r\n                if (response.status === 400) {\r\n                    throw new Error('Токен не передан или передан не в том формате')\r\n                } else if (response.status === 401) {\r\n                    throw new Error('Передан некоррекный токен')\r\n                } else\r\n                return response.json()\r\n            })\r\n            .then(res => {\r\n                if (res.data?.email) {\r\n                    setEmail(res.data.email);\r\n                    handleLogin();\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        }    \r\n    }\r\n\r\n    return (\r\n        // Оборачиваем в контекст текущего пользователя\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n            <Header \r\n                  isMobile={isMobile}\r\n                  isExpanded={isExpanded}\r\n                  email={email} \r\n                  loggedIn={loggedIn}\r\n                  isSignInLocation={isSignInLocation}\r\n                  setSignInScreen={()=>setIsSignInLocation(true)}\r\n                  resetSignInScreen={()=>setIsSignInLocation(false)}\r\n                  handleSignOut={handleSignOut}\r\n                  resetEmail={()=>setEmail('')}\r\n                  expand={()=>setIsExpanded(!isExpanded)}\r\n            />\r\n            {/* Оборачиваем в контекст стейта валидации */}\r\n            <ValidationContext.Provider value={validationContext}>\r\n\r\n                <Switch>\r\n                    <ProtectedRoute \r\n                        path=\"/cards\" \r\n                        loggedIn={loggedIn}  \r\n                        component={Main} \r\n                        onEditProfile={handleEditProfileClick}\r\n                        onEditAvatar={handleEditAvatarClick}\r\n                        onAddPlace={handleAddPlaceClick}\r\n                        onCardClick={handleCardClick}\r\n                        onCardLike={handleCardLike}\r\n                        onDeleteCard={handleDeleteCardClick}\r\n                        cards={cards}\r\n                    />\r\n                      \r\n                    <Route path=\"/signup\">\r\n                        <Register                             \r\n                            // setOpen={infoToolTipOpen}\r\n                            setSignInScreen={()=>setIsSignInLocation(true)}\r\n                            onRegister={onRegister}\r\n                        />\r\n\r\n                    </Route>\r\n\r\n                    <Route path=\"/signin\">\r\n                        <Login \r\n                            // setOpen={infoToolTipOpen}\r\n                            onLogin={onLogin}\r\n                        />\r\n                    </Route>\r\n\r\n                    <Route path=\"/\">\r\n                        {loggedIn ? <Redirect to=\"/cards\" /> : <Redirect to=\"/signin\" />}\r\n                    </Route>\r\n                </Switch>   \r\n            \r\n                <Footer />\r\n\r\n          \r\n                <LoadingState.Provider value={loadingText}>\r\n                    <EditProfilePopup\r\n                        isOpen={isEditProfilePopupOpen}\r\n                        onClose={closeAllPopups}\r\n                        onUpdateUser={handleUpdateUser}\r\n                        noClose={noClose}\r\n                        onInput={handleInput}\r\n                    />\r\n\r\n                    <EditAvatarPopup\r\n                        isOpen={isEditAvatarPopupOpen}\r\n                        onClose={closeAllPopups}\r\n                        onUpdateAvatar={handleUpdateAvatar}\r\n                        noClose={noClose}\r\n                        onInput={handleInput}\r\n                    />\r\n\r\n                    <AddPlacePopup\r\n                        isOpen={isAddPlacePopupOpen}\r\n                        onClose={closeAllPopups}\r\n                        onAddPlace={handleAddPlace}\r\n                        noClose={noClose}\r\n                        onInput={handleInput}\r\n                    />\r\n\r\n                    <ConfirmationPopup\r\n                        isOpen={isPopupWithSubmitOpen}\r\n                        onClose={closeAllPopups}\r\n                        noClose={noClose}\r\n                        onDeleteCard={handleDeleteCard}\r\n                        card={card}\r\n                    />\r\n                  </LoadingState.Provider>\r\n              </ValidationContext.Provider>\r\n\r\n              <ImagePopup\r\n                  isOpen={selectedCard}\r\n                  onClose={closeAllPopups}\r\n                  card={card}\r\n                  noClose={noClose}\r\n              />\r\n\r\n              <InfoTooltip\r\n                  success={success}\r\n                  isOpen={isInfoTooltipOpen}\r\n                  onClose={closeAllPopups}\r\n                  noClose={noClose}\r\n              />\r\n        </CurrentUserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}